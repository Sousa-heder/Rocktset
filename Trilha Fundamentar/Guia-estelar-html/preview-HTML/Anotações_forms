
# Formulários 

Para que serve?
- Capturar dado de entrada (input)
- Interação
- Controle

Pré requisitos 
- Basico HTML

Dominar
- Estilização
- Validação
-  Controles customizados
- Javascript


<form>

- Elemento que definirá um formulário
- É um container estilo <section> <footer>

Atributos básicos
- action
- method

<form action="" method="POST"></form>

<fieldset>

- agrupamento de campos
- mesmo propósito
- semântico
- acessibilidade

Atributos especias
- diasbled
    - desabilita todos os elementos internos
    - não serão enviados ao submeter ao formalário
- form
    - o id de um formulário ao qual esse fieldset pertence
    - não precisa estar dentro do formulário
- name 
    - nome do grupo

<legend>

- nome do agrupamento 
- primeiro elemento dentro do fieldset


<label>

- associar e identificar uma (ou mais) tag de entregad de dados
- acessibilidade 
- você poderá clicar para mudar o foco da entrada de dados

Atributos
- for
    - para fazer a conexão entre este label e a tag de entreda de dados
    - é feita via id do input
    - só funciona com elementos específicos
    - button, input (not hidden), meter, output, progress, select, textarea

<label for="nome">Nome Completo</label>
<input id="nome" type="text">


<button>

- Representa um botão
- Usado para enviar formulários
- É estilizados pelo user agent


Atributos comuns

- type
    - submit
    - reset
    - button
- autofocus
- disabled
- name
- value
- form


<form action="" id="meu-form"></form>

<button type="submit" form="meu-form">Enviar</button>

<datalist>

- Lista de valores como sugestão a uma tag <input>
- Valaros sugestivos e não obrigatórios 
- Usuários poderão  selecionar um dos valores, ou colocar um valor diferente da sugestão.

<datalist id="fruitsdata">
    <option>apples</option>
    <option>banana</option>
    <option>mango</option>
    <option>orange</option>
    <option>cherry</option>
</datalist>


# list

- Recebe como valor um id de um <datalist> residente no mesmo documento


# Tipos de input suportados

- text, search, url, tel, email, date, month, week, time, datetime-local, number, range e color.

* Valores de datalist que não são compatíveis com o tipo do <input> não serão apresentados.

# Tipos de input não suportados (conforme especificação)

- hidden, password, checkbox, radio, file, ou qualquer tipo de button

# User Agent

Verificar a compatibilidade com o browser https://caniuse.com 

<input type="text" list="fruitsdata" placeholder="Escolha uma fruta"/>

<datalist id="fruitsdata">
    <option>apples</option>
    <option>banana</option>
    <option>mango</option>
    <option>orange</option>
    <option>cherry</option>
</datalist>


# TAG DE ENTRADA DE DADOS 


<input> 

- Um dos mais usados em fomularários 
- Aceita os mais diversos tipos de dados
- um dos mais poderosos e complexos
- Elevado número de combinações 

Atributos

- type
- name 
- id

<input type="">


<input> Atributos comuns

- autocomplete
- autofocus
- disabled
- readonly (quase todos)
- value
- form (quase todos)
- name 
- required (quase todos)
- placeholder (password, search, tel, text, url)
<input type="type">




<input type="password">

- Colocar uma senha de maneira segura
- Esconde o que está sendo digitado no campo
- O estilo da aprensentação do campo, depende do User Agent

* Atributos

- minlength / maxlength 
    * O número mínimo e/o maximo de caracteres para este campo

- size
    * O número aceitável de caracteres que esse campo deverá conter 

- pattern
    * Expressão regular para validar oque está sendo digitado no campo
    * Altamente recomendado o uso de um padrão de segurança alta de senhas
    * exemplo: queremos que a senha contenha caracteres hexadecimais com limite de no mínimo 4  e no máximo 8 caracteres
        * pattern= "[0-9a-fA-F]{4,8}"

- placeholder 
    8 Mostra um exemplo de texto a ser digitado no campo

- readonly/ disabled
    * Atributo booleano indicando se o campo está habilitado ou não

- required
    * O campo será obrigatório

- inputmode
    * poderá alterar o uso do teclado em smartphones 
    * exemplo: queremos que o cliente só adicione números
        *inputmode="numeric"

- autocomplete 
    * on: permite a sugestão de: new-password ou current-password
    * off: desabilita a opção de autocompletar
    * new-password: o navegador poderá sugerir uma nova senha 



<input type="email">

- Espera que o usuário degite um email
- Irá validar se o valor digitido é um email

* Atributos

- placeholder
- readonly / disabled
- value
- required

- multiple 
    * O campo irá receber 1 ou mais emails, separados por vírgulas

- minlength / maxlength 
    * O número mínimo e/o maximo de caracteres para este campo 

- size
    * O número aceitável de caracteres que esse campo deverá conter 

- pattern
    * Expressão regular para validar oque está sendo digitado no campo
    * exemplo: O usuário só poderá colocar um email do domínio rocketseat.com.br
        * pattern=".+@rocketseat\.com\.br"

- list 
    * o id de uma tag <datalist> que está no mesmo documento 
    * <datalist> irá conter uma lista de valores pré definidos a fim de sugerir ao usuário, quais valores estão disponíveis.
        * Os valores  do <datalist> que não forem compatives com o campo, não serão apresentados como sugestão. 




