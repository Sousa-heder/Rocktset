<!DOCTYPE html>
<html lang="Pt-br">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Atributos</title>
</head>
<body>
    
<!--
    Anatomia das tags

    - Abertura de tag
    - Fechamento de tag
    - Comteúdo
    - Elementos
-->
<h1>
    O Titulo
</h1>
<p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Ad, sunt? Quod veritatis sed dolores explicabo voluptas est eius, pariatur aspernatur? Laborum, laudantium illum quos nemo quasi enim labore mollitia eos? <br> Lorem ipsum dolor sit amet consectetur adipisicing elit. Velit veniam dolore fugit, ex perferendis, harum qui nobis temporibus, dolorem quis reprehenderit facilis quo? Soluta odio eos rem aut ipsa doloribus.</p>

<!--
    - Elementos Vazios
-->
<img src="" alt="">
<input type="">

<!--
    Atributos HTML
    - informações extras
    - configurações
-->
<img src="" alt="">

<!--
    Atributos booleanos
    - não precisam de conteúdo
-->
<input type="text" disabled>

<!--
    Aspas
    - omissão
    - simples
    - duplas
-->
<a href="https://www.google.com" title="Isn't">link</a>

<!--
    Atributos Globais mais utilizados
    - class
    - contenteditable
    - data-*
    - hidden
    - id
    - style
    - tabindex
    - title
-->

<div class="carrinho"
contenteditable="true" id="name1" tabindex="1" style="margin: 10px;">
</div>

<div class="carrinho" data-id="" id="name2" style="color: red ;" tabindex="2">
</div>

<!--
    Aninhamentos de tags
    - Fluxo
    - Hieraquia
    - Posicionamento dos elementos
-->
<div>
    <p>
        <em></em>
    </p>
    
    <p>

    </p>
</div>

<!--
    Conteúdo do texto e caracteres reservados.
-->
<p>
    &lt;os espaços&gt;
    &amp;
    <br> 
     &quot; que colocamos &quot;
    <br>
    &apos; além das quebras de linha são ignorados

</p>

<!--
    Semantinca
    
    - Dar significado
    - Elmentos semãnticos

    *se fazer perguntas de como ira ficar os elementos no seu codigo.

-->
<!--
    cabeçalhos e parágrafos
-->
<h1>Sobre mim</h1>
<p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Officiis odio, culpa accusamus amet nesciunt quas nostrum officia pariatur voluptatem, nobis hic excepturi aliquid non impedit. Obcaecati cumque nisi possimus molestias!</p>

<h2>Nascimento</h2>
<p>lorem</p>

<h2>Trabalho</h2>
<p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Maiores aliquid quibusdam nisi earum doloribus? Provident enim illo ipsum atque! Quas, officia! Doloribus iste ducimus voluptatem, odit blanditiis saepe rerum repudiandae.</p>
    <h1>Te levando ao google</h1>

    <p> para ir ao google <a href="https://www.google.com/">CLIQUE AQUI</a>
     </p>
     <p>Eu gostaria que o tempo parace por  <strong>MIL ANOS </strong>para eu treinar </p> <br>

     <h1>
        Cores
     </h1>

    <!--
        #cores 
        Usamos CSS para alerar cores do nosso documento
        
        ## Tipos

        * background-color (para caixas)
        * color (para textos)
        * borde-color (para-caixas)
        * Outros..

        ## Valores

        poremos definir valores por

        * palavra-chae (blue, transparent)
        * hexadecimal (#990011)
        * funções: rgb, rgba. hsl, hsla.

    -->
    <style>
           css
    element {
        /* Keyword values */
        color: currentcolor ;
        /* <named-color> values*/
        color: red;
        color: orange;
        color: tan;
        color: rebeccapurple;

        /* <hex-color> values 0-F */
        color: #090 ;   
        color: #009900;
        color: #090a;
         color: #009900aa;

        /*<rgb()> values */
        color: rgb(red, green, blue); 
        color: rgba(red, green, blue, alpha) ;   
        color: rgb(green, red, blue);
        color: rgba(green, red, blue);
        color: rgb(blue, green, red);
        color: rgba(blue, green, red, alpha);

        /*<hsl> values*/
        color:hsl(hue, saturation, lightness) ;
        color:hsla(hue, saturation, lightness, alpha) ;

        /*Global-values*/  
        color: inherit;
        color: initial;
        color: unset;
    }
    </style>
    <!--
        <VIDEO>
            - scr
            - controls
            - se não funcionar?
                - fallback content
            - source
                - src
                - type

    <video controls>
        <source src="">
        <p>Este browser não suporta video, baixe-o aqui</p>

    </video>
    -->
    <iframe 
    width="560" 
    height="315" 
    src="https://www.youtube.com/embed/hPtUbx8Ho5w" 
    title="YouTube video player" 
    frameborder="0" 
    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" 
    allowfullscreen>
    </iframe>
    <!--
        SVG <svg>
        É uma marcação, estilo html, não é para textos e sim para fazer imagens.
        Possuimos elementos para gerar formas
        
        Para entender melhor
        - Imagem rasterizada x Imagem vetorizada

        Benefícios
        - Mais leve
        - Mais detalhada
        - Maior acessivilidade e SEO
        - Pode ser editada via CSS ou atributos
        
        Desvantagens
        - Pode ser mais complicado de trabalhar
        - Quanto mais complexa a imagem, mais trabalho para o navegador
        - Navegadores mais antigos não possuem suporte para essa tag

        Para fotografias, ainda prefira usar imagens rasterizadas. 

        # Page Layouts 
        - Tables
        - Floats e Clear
        - Frameworks e Grid Systems
        - Flexbox
        - Grid

        ## Posicionamentos 
        Controlar onde, na pagina, o elemento irá ficar,
        alterando o fluxo normal do elementos.
        
        - Name: position
        - value: static

    -->
</body>
</html>